QuickTerminal.alfredworkflowのメモ

機能：
現在選択しているテキストを判断して、ターミナル実行、URLオープン、検索を実施する
Examples.txtもつくりましたのでみてください

インストール：
　.alfredworkflowをダウンロード
　ファイルをダブルクリックしてワークフローに登録


使い方：
　テキストを選択してHOTKEY（⌘T）
　HOTKEYはご自身で設定が必要です
  


開発メモ：


1.実装までの試行錯誤

　Key Comboオブジェクトのサンプルを考えていました
　初めは、選択中のテキストを⌘Cでクリップボードにコピーして、それをスクリプトでターミナルに送るみたいなイメージ
　でも、この場合、⌘Cを送ってもクリップできないことがありました
　結局、HotkeyオブジェクトのSelection in macOSを利用することにしたら
　けっこう思い通りに稼働するようになりました
　

2.実装後のちょい足し

　試作したワークフローはHotkeyオブジェクトからTerminal Commandオブジェクトを結ぶだけのものでした
　実際の利用を考えると、ターミナルにコピペで利用するコマンドは、別途、保存するようなことが想定されるので、
　クリップボードに追加する部分をつけ達しました。Copy To Clipboardオブジェクトです
　
　さらに、たんなる思いつきですが、URLを選択している場合は、そのURLを開くようにしたり
　URLでも、コマンドでもないものは、検索するようにしてみました
　ターミナルとは無関係になっちゃいました

　選択テキストの判定はConditionalオブジェクトで制御しています
　正規表現で、URLっぽいものは、Open URLオブジェクトでオープン
　英数字・記号・スペースの場合はTerminal Commandオブジェクトと、Copy to Clipboardオブジェクトで処理
　それ以外はDefault Web Searchで検索、という具合です　

  結果的にselecitonを{query}にして、内容に応じて処理を行うワークフローになりました
　選択文字で処理を判断できるのであれば、ご自身がコピペなどでよく使う処理を追加すると良いでしょう
　文字選択＋Hotkeyだけなので便利かも


3.背景　
　
　シェルスクリプトを描くようになってターミナルを使うことも増えたので、思いつきました
　コマンドのクリップからターミナルを立ち上げてペースト＆実行がHOTKEYひとつでできるようになります
　省力化というほどには大したことではないですね　

　
